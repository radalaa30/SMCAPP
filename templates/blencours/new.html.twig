{% extends 'base2.html.twig' %}

{% block title %}Nouveau BL{% endblock %}

{% block stylesheets %}
<style>
    .new-bl-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px 0;
    }
    .card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
        padding: 1rem 1.25rem;
    }
    .card-header h4 {
        margin: 0;
        font-weight: 600;
        color: #343a40;
    }
    .card-body {
        padding: 1.5rem;
    }
    .page-title {
        margin-bottom: 20px;
        color: #343a40;
        font-weight: 600;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .btn-back {
        background-color: #6c757d;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        font-weight: 500;
        transition: background-color 0.2s;
    }
    .btn-back:hover {
        background-color: #5a6268;
        color: white;
        text-decoration: none;
    }
    .btn-back i {
        margin-right: 0.5rem;
    }
    .action-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #e9ecef;
    }
    .btn-create {
        background-color: #28a745;
        color: white;
        padding: 0.5rem 1.5rem;
        border-radius: 4px;
        border: none;
        font-weight: 500;
        transition: background-color 0.2s;
    }
    .btn-create:hover {
        background-color: #218838;
    }
    .form-section {
        margin-bottom: 1.5rem;
    }
    .form-section-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
        color: #495057;
    }
    .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }
    .form-group {
        margin-bottom: 1rem;
    }
    .form-group label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: #495057;
    }
    .alert-success {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
        padding: 0.75rem 1.25rem;
        border-radius: 0.25rem;
        margin-bottom: 1rem;
    }
    .alert-danger {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
        padding: 0.75rem 1.25rem;
        border-radius: 0.25rem;
        margin-bottom: 1rem;
    }
    .loading-indicator {
        display: none;
        align-items: center;
        margin-left: 1rem;
    }
    .loading-indicator .spinner-border {
        width: 1rem;
        height: 1rem;
        margin-right: 0.5rem;
    }
    .help-tip {
        display: inline-block;
        margin-left: 0.5rem;
        color: #6c757d;
        cursor: pointer;
    }
    .help-tip:hover {
        color: #007bff;
    }
    .required-field label::after {
        content: " *";
        color: #dc3545;
    }
    .help-section {
        background-color: #f8f9fa;
        border-left: 4px solid #17a2b8;
        padding: 1rem;
        margin-bottom: 1.5rem;
        border-radius: 0 4px 4px 0;
    }
    .help-section h5 {
        color: #17a2b8;
        margin-bottom: 0.5rem;
    }
    .help-section ul {
        margin-bottom: 0;
        padding-left: 1.5rem;
    }
    
    /* ========== STYLES OPTIMISÉS POUR LE MENU DÉROULANT ========== */
    
    /* Container principal du sélecteur avec thème bleu/jaune */
    .bl-selector-container {
        background: linear-gradient(135deg, #e3f2fd 0%, #fff9c4 20%, #e3f2fd 100%);
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        border: 3px solid #2196f3;
        box-shadow: 0 8px 25px rgba(33, 150, 243, 0.2);
        position: relative;
        /* SUPPRIMÉ: overflow: hidden; pour permettre au menu de s'afficher */
    }
    
    .bl-selector-container::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle, rgba(255, 193, 7, 0.1) 0%, transparent 70%);
        pointer-events: none;
    }
    
    .bl-selector-title {
        font-weight: 700;
        color: #1976d2;
        margin-bottom: 18px;
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.8);
    }
    
    .bl-count-badge {
        background: linear-gradient(45deg, #ffc107, #ff9800);
        color: #000;
        border-radius: 30px;
        padding: 8px 15px;
        font-size: 0.9rem;
        font-weight: 700;
        margin-left: 15px;
        box-shadow: 0 4px 12px rgba(255, 193, 7, 0.4);
        animation: bounce 1.5s ease-in-out infinite alternate;
        border: 2px solid #fff;
    }
    
    @keyframes bounce {
        0% { transform: translateY(0px) scale(1); }
        100% { transform: translateY(-3px) scale(1.02); }
    }
    
    /* Menu déroulant personnalisé */
    .custom-select-wrapper {
        position: relative;
        user-select: none;
        width: 100%;
        z-index: 1000; /* Z-index élevé pour s'assurer que le menu s'affiche au-dessus */
    }
    
    .custom-select {
        position: relative;
        display: flex;
        flex-direction: column;
        cursor: pointer;
    }
    
    .custom-select-trigger {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 15px 25px;
        font-size: 1.1rem;
        color: #1976d2;
        font-weight: 600;
        height: 60px;
        background: linear-gradient(135deg, #fff 0%, #f0f8ff 50%, #fff9e6 100%);
        border: 3px solid #2196f3;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(33, 150, 243, 0.15);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .custom-select-trigger:hover {
        border-color: #ffc107;
        box-shadow: 0 8px 25px rgba(255, 193, 7, 0.3);
        transform: translateY(-2px);
    }
    
    .custom-select-trigger::after {
        content: '';
        width: 0;
        height: 0;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-top: 10px solid #2196f3;
        transition: all 0.3s ease;
        margin-left: 15px;
    }
    
    .custom-select.opened .custom-select-trigger::after {
        transform: rotate(180deg);
        border-top-color: #ffc107;
    }
    
    .custom-select.opened .custom-select-trigger {
        border-color: #ffc107;
        background: linear-gradient(135deg, #fff9e6 0%, #f0f8ff 50%, #fff 100%);
        border-radius: 12px 12px 0 0;
    }
    
    .custom-options {
        position: absolute;
        display: block;
        top: 100%;
        left: 0;
        right: 0;
        background: #fff;
        border: 3px solid #ffc107;
        border-top: none;
        border-radius: 0 0 12px 12px;
        box-shadow: 0 8px 25px rgba(255, 193, 7, 0.3);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        z-index: 1001; /* Z-index très élevé pour être au-dessus de tout */
        max-height: 300px;
        overflow-y: auto;
        transform: translateY(-10px);
    }
    
    .custom-select.opened .custom-options {
        opacity: 1;
        visibility: visible;
        pointer-events: all;
        transform: translateY(0);
    }
    
    .custom-option {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px 25px;
        color: #333;
        border-bottom: 1px solid #f0f0f0;
        transition: all 0.2s ease;
        font-weight: 500;
        cursor: pointer;
    }
    
    .custom-option:last-of-type {
        border-bottom: none;
    }
    
    .custom-option:hover {
        background: linear-gradient(90deg, #e3f2fd 0%, #fff9c4 100%);
        color: #1976d2;
        padding-left: 30px;
        font-weight: 600;
    }
    
    .custom-option.selection {
        background: linear-gradient(90deg, #2196f3 0%, #ffc107 100%);
        color: #fff;
        font-weight: 700;
    }
    
    /* Styles spécifiques selon le type de client */
    .custom-option.client-ci9 {
        border-left: 6px solid #2196f3;
        background: linear-gradient(90deg, #e3f2fd 0%, #f8f9fa 100%);
    }
    
    .custom-option.client-ci9:hover {
        border-left-color: #1976d2;
        background: linear-gradient(90deg, #bbdefb 0%, #e3f2fd 100%);
        transform: translateX(5px);
    }
    
    .custom-option.client-other {
        border-left: 6px solid #ffc107;
        background: linear-gradient(90deg, #fff9c4 0%, #f8f9fa 100%);
    }
    
    .custom-option.client-other:hover {
        border-left-color: #ff9800;
        background: linear-gradient(90deg, #fff176 0%, #fff9c4 100%);
        transform: translateX(5px);
    }
    
    /* Style spécial pour les lignes contenant "machines" */
    .custom-option.has-machines {
        font-weight: 700 !important;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        border-left-width: 8px !important;
        background: linear-gradient(90deg, #fff3cd 0%, #ffeaa7 100%) !important;
        color: #856404 !important;
    }
    
    .custom-option.has-machines:hover {
        background: linear-gradient(90deg, #ffeaa7 0%, #fdcb6e 100%) !important;
        color: #6c5400 !important;
        font-weight: 800 !important;
        transform: translateX(8px) scale(1.02);
    }
    
    .custom-option.has-machines .client-badge {
        background: linear-gradient(45deg, #e17055, #fd79a8) !important;
        color: white !important;
        font-weight: 800 !important;
        animation: machinesPulse 1.5s ease-in-out infinite alternate;
    }
    
    @keyframes machinesPulse {
        from { 
            transform: scale(1);
            box-shadow: 0 2px 8px rgba(225, 112, 85, 0.3);
        }
        to { 
            transform: scale(1.05);
            box-shadow: 0 4px 15px rgba(225, 112, 85, 0.6);
        }
    }
    
    /* Badge pour indiquer le type de client */
    .client-badge {
        display: inline-flex;
        align-items: center;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 700;
        margin-left: 10px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .client-badge-ci9 {
        background: linear-gradient(45deg, #2196f3, #1976d2);
        color: white;
        border: 2px solid #fff;
    }
    
    .client-badge-other {
        background: linear-gradient(45deg, #ffc107, #ff9800);
        color: #000;
        border: 2px solid #fff;
    }
    
    /* Animation pour les badges */
    .client-badge {
        animation: glow 2s ease-in-out infinite alternate;
    }
    
    @keyframes glow {
        from { box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }
        to { box-shadow: 0 4px 15px rgba(33, 150, 243, 0.3); }
    }
    
    .client-badge-other {
        animation: glowYellow 2s ease-in-out infinite alternate;
    }
    
    @keyframes glowYellow {
        from { box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }
        to { box-shadow: 0 4px 15px rgba(255, 193, 7, 0.4); }
    }
    
    /* Style pour les informations du BL sélectionné */
    .client-info-summary {
        background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
        border-radius: 12px;
        padding: 20px;
        margin: 20px 0;
        border: 2px solid #2196f3;
        box-shadow: 0 6px 20px rgba(33, 150, 243, 0.15);
    }
    
    .client-info-summary.client-ci9 {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-color: #1976d2;
    }
    
    .client-info-summary.client-other {
        background: linear-gradient(135deg, #fff9c4 0%, #fff176 100%);
        border-color: #ff9800;
    }
    
    .client-info-summary h5 {
        color: #1976d2;
        margin-bottom: 15px;
        border-bottom: 2px solid #2196f3;
        padding-bottom: 10px;
        font-weight: 700;
    }
    
    .client-info-summary ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .client-info-summary li {
        padding: 8px 0;
        border-bottom: 1px dotted #90caf9;
        display: flex;
        justify-content: space-between;
    }
    
    .client-info-summary li:last-child {
        border-bottom: none;
    }
    
    .client-info-summary strong {
        color: #1976d2;
        min-width: 140px;
        font-weight: 600;
    }
    
    #client-info-display {
        display: none;
        margin-bottom: 20px;
    }
    
    /* Scrollbar personnalisée pour les options */
    .custom-options::-webkit-scrollbar {
        width: 8px;
    }
    
    .custom-options::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }
    
    .custom-options::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg, #2196f3, #ffc107);
        border-radius: 10px;
    }
    
    .custom-options::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(45deg, #1976d2, #ff9800);
    }
    
    /* Cases à cocher avec style amélioré */
    .checkbox-group {
        margin-top: 15px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #dee2e6;
    }
    .checkbox-group-title {
        font-weight: 600;
        color: #495057;
        margin-bottom: 10px;
        padding-bottom: 5px;
        border-bottom: 1px solid #dee2e6;
    }
    .checkbox-container {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
    }
    .form-check {
        display: flex;
        align-items: center;
        padding: 8px 12px;
        background-color: #fff;
        border-radius: 6px;
        border: 1px solid #dee2e6;
        margin: 0;
        cursor: pointer;
        transition: all 0.2s ease;
    }
    .form-check:hover {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.15);
    }
    .form-check-input {
        margin-right: 8px;
        cursor: pointer;
    }
    .form-check-label {
        margin-bottom: 0;
        cursor: pointer;
    }
    .form-check-input:checked + .form-check-label {
        color: #007bff;
        font-weight: 500;
    }
    .pickingok-check {
        border-left: 4px solid #17a2b8;
    }
    .form-check-input[id="blencours_Pickingok"]:checked + .form-check-label {
        color: #17a2b8;
    }
    .pickingnok-check {
        border-left: 4px solid #dc3545;
    }
    .form-check-input[id="blencours_Pickingnok"]:checked + .form-check-label {
        color: #dc3545;
    }


    /* --- Ajout multiple --- */
    .bulk-card{
        border-radius: 12px;
        border: 1px solid #dee2e6;
        background: #ffffffcc;
        box-shadow: 0 8px 20px rgba(0,0,0,.06);
        margin-top: 25px;
    }
    .bulk-header{
        padding: 14px 18px;
        border-bottom: 1px solid #e9ecef;
        background: linear-gradient(135deg, #e3f2fd 0%, #fff 100%);
        border-radius: 12px 12px 0 0;
        display:flex; justify-content:space-between; align-items:center; gap:10px; flex-wrap:wrap;
    }
    .bulk-body{ padding: 16px 18px; }
    .bulk-tools{ display:flex; gap:8px; align-items:center; flex-wrap:wrap; }
    .small-muted{ font-size:.9rem; color:#6c757d; }
    .bl-list{
        max-height: 360px; overflow:auto; border:1px solid #e9ecef; border-radius:8px; padding:10px; background:#fff;
    }
    .bl-item{
        display:flex; justify-content:space-between; align-items:center;
        padding:8px 10px; border-bottom:1px dashed #eee; gap:10px;
    }
    .bl-item:last-child{ border-bottom:none; }
    .bl-id{ font-weight:600; color:#0d6efd; }
    .bl-meta{ font-size:.9rem; color:#6c757d; }
    .bulk-actions{ display:flex; justify-content:flex-end; gap:10px; margin-top:12px; }
</style>
{% endblock %}

{% block body %}
<div class="new-bl-container">
    <div class="page-title">
        <h1><i class="fas fa-plus-circle me-2"></i>Créer un nouveau BL</h1>
        <a href="{{ path('app_blencours_index') }}" class="btn-back">
            <i class="fas fa-arrow-left"></i> Retour à la liste
        </a>
    </div>

    {# Flashs #}
    {% for message in app.flashes('success') %}
        <div class="alert alert-success"><i class="fas fa-check-circle me-2"></i>{{ message }}</div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger"><i class="fas fa-exclamation-circle me-2"></i>{{ message }}</div>
    {% endfor %}
    {% for message in app.flashes('info') %}
        <div class="alert alert-info"><i class="fas fa-info-circle me-2"></i>{{ message }}</div>
    {% endfor %}

    <div class="help-section">
        <h5><i class="fas fa-info-circle me-2"></i>Conseils pour la création d'un BL</h5>
        <ul>
            <li>Vérifiez que le numéro de BL est unique</li>
            <li>Les clients commençant par "CI9" sont bleus, les autres jaunes</li>
            <li>Les BL se terminant par "_T" sont exclus</li>
        </ul>
    </div>

    {# ===== Sélecteur custom (mono-BL) — inchangé ===== #}
    <div class="bl-selector-container">
        <div class="bl-selector-title">
            <i class="fas fa-list-ul me-2"></i>BL disponibles aujourd'hui
            <span class="bl-count-badge">{{ (todayBlList|filter(bl => bl['No_Bl']|slice(-2) != '_T'))|length }}</span>
        </div>
        <div class="custom-select-wrapper">
            <div id="custom-select" class="custom-select">
                <div class="custom-select-trigger">
                    <span>-- Sélectionnez un BL existant pour pré-remplir --</span>
                </div>
                <div class="custom-options">
                    <div class="custom-option" data-value="" data-code-client="">
                        <span>-- Nouveau BL vide --</span>
                        <span class="client-badge client-badge-ci9">NOUVEAU</span>
                    </div>
                    {% set processedBls = [] %}
                    {% for bl in todayBlList %}
                        {% if bl['No_Bl']|slice(-2) != '_T' and bl['No_Bl'] not in processedBls %}
                            {% set processedBls = processedBls|merge([bl['No_Bl']]) %}
                            {% set client = bl['Client'] ?: 'Client non spécifié' %}
                            {% set codeClient = bl['Code_Client'] ?: '' %}
                            {% set clientClass = codeClient|slice(0,3) == 'CI9' ? 'client-ci9' : 'client-other' %}
                            {% set badgeClass  = codeClient|slice(0,3) == 'CI9' ? 'client-badge-ci9' : 'client-badge-other' %}
                            {% set badgeText   = codeClient|slice(0,3) == 'CI9' ? 'CI9' : 'STD' %}
                            {% set hasMachines = client|lower matches '/.*machines.*/' %}
                            {% set machinesClass = hasMachines ? 'has-machines' : '' %}
                            <div class="custom-option {{ clientClass }} {{ machinesClass }}"
                                 data-value="{{ bl['No_Bl'] }}"
                                 data-code-client="{{ codeClient }}">
                                <span>{{ bl['No_Bl'] }} - {{ client|slice(0,35) }}{% if client|length > 35 %}...{% endif %}</span>
                                <span class="client-badge {{ badgeClass }}">
                                    {% if hasMachines %}<i class="fas fa-cogs me-1"></i>MACHINES{% else %}{{ badgeText }}{% endif %}
                                </span>
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
            </div>
        </div>
        <div class="mt-3 small text-muted">
            <i class="fas fa-lightbulb me-1"></i>
            <strong>Astuce :</strong> Sélectionnez un BL existant pour pré-remplir automatiquement le formulaire.
        </div>
    </div>

    <div id="client-info-display"></div>

    {# ===== Formulaire mono-BL (Symfony Form) — inchangé ===== #}
    <div class="card">
        <div class="card-header">
            <h4><i class="fas fa-file-invoice me-2"></i>Informations du nouveau BL</h4>
        </div>
        <div class="card-body">
            {{ form_start(form, {'attr': {'id': 'bl-new-form'}}) }}
                <div class="form-section">
                    <div class="form-section-title">Informations générales</div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(form.numBl) }}
                                {{ form_widget(form.numBl, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(form.numBl) }}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(form.statut) }}
                                {{ form_widget(form.statut, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(form.statut) }}
                            </div>
                        </div>
                    </div>

                    <div class="checkbox-group">
                        <div class="checkbox-group-title"><i class="fas fa-tags me-2"></i>Statut de picking</div>
                        <div class="checkbox-container">
                            <div class="form-check pickingok-check">
                                {{ form_widget(form.Pickingok, {'attr': {'checked': 'checked'}}) }}
                                {{ form_label(form.Pickingok) }}
                                <i class="fas fa-check ms-2 text-info"></i>
                            </div>
                            <div class="form-check pickingnok-check">
                                {{ form_widget(form.Pickingnok) }}
                                {{ form_label(form.Pickingnok) }}
                                <i class="fas fa-times ms-2 text-danger"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="action-buttons">
                    <a href="{{ path('app_blencours_index') }}" class="btn btn-secondary">Annuler</a>
                    <div class="d-flex align-items-center">
                        <button type="submit" class="btn btn-create">
                            <i class="fas fa-save me-2"></i>Créer le BL
                        </button>
                        <div class="loading-indicator">
                            <div class="spinner-border text-primary" role="status"></div>
                            <span>Création en cours...</span>
                        </div>
                    </div>
                </div>
            {{ form_end(form) }}
        </div>
    </div>

    {# ===== AJOUT MULTIPLE ===== #}
    <div class="bulk-card">
        <div class="bulk-header">
            <h4 class="m-0"><i class="fas fa-layer-group me-2"></i>Ajouter plusieurs BL en une fois</h4>
            <div class="bulk-tools">
                <span class="small-muted">Sélectionne un ou plusieurs BL ci-dessous puis “Ajouter la sélection”.</span>
            </div>
        </div>
        <div class="bulk-body">
            <form method="post" action="{{ path('app_blencours_bulk_create') }}">
                <input type="hidden" name="_token" value="{{ csrf_token('bulk_create_blencours') }}">

                <div class="row g-3 align-items-end mb-3">
                    <div class="col-md-4">
                        <label class="form-label">Statut par défaut</label>
                        <select name="default_status" class="form-select">
                            <option value="En cours">En cours</option>
                            <option value="En attente">En attente</option>
                            <option value="Traité">Traité</option>
                        </select>
                        <div class="form-text">Sera remplacé si le BL source a un Statut_Cde.</div>
                    </div>
                    <div class="col-md-8 text-end">
                        <button type="button" id="check-all" class="btn btn-outline-primary btn-sm me-2">
                            <i class="fas fa-check-square me-1"></i> Tout cocher
                        </button>
                        <button type="button" id="uncheck-all" class="btn btn-outline-secondary btn-sm me-2">
                            <i class="far fa-square me-1"></i> Tout décocher
                        </button>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-plus-circle me-1"></i> Ajouter la sélection
                        </button>
                    </div>
                </div>

                <div class="bl-list">
                    {% set seen = [] %}
                    {% for bl in todayBlList %}
                        {% set no = bl['No_Bl'] %}
                        {% if no and no|slice(-2) != '_T' and no not in seen %}
                            {% set seen = seen|merge([no]) %}
                            {% set client = bl['Client'] ?: 'Client non spécifié' %}
                            {% set codeClient = bl['Code_Client'] ?: '' %}
                            <div class="bl-item">
                                <div>
                                    <span class="bl-id">{{ no }}</span>
                                    <span class="bl-meta"> — {{ client }}</span>
                                    {% if codeClient %}
                                        <span class="badge bg-light text-muted ms-2">{{ codeClient }}</span>
                                    {% endif %}
                                </div>
                                <div>
                                    <input class="form-check-input bl-check" type="checkbox" name="selected_bls[]" value="{{ no }}" id="bl_{{ loop.index }}">
                                </div>
                            </div>
                        {% endif %}
                    {% endfor %}
                    {% if seen is empty %}
                        <div class="text-muted">Aucun BL disponible pour l’ajout multiple.</div>
                    {% endif %}
                </div>

                <div class="bulk-actions">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-plus-circle me-1"></i> Ajouter la sélection
                    </button>
                </div>
            </form>
        </div>
    </div>

</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // ====== Ton JS existant (mono-BL) — inchangé sauf erreurs éventuelles ======
    const form = document.getElementById('bl-new-form');
    const loadingIndicator = document.querySelector('.loading-indicator');
    if (form) {
        form.addEventListener('submit', function() {
            const requiredFields = form.querySelectorAll('[required]');
            let isValid = true;
            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    isValid = false;
                    field.classList.add('is-invalid');
                } else {
                    field.classList.remove('is-invalid');
                }
            });
            if (isValid) { loadingIndicator.style.display = 'flex'; } else { return false; }
        });
    }

    const customSelect = document.getElementById('custom-select');
    const customSelectTrigger = document.querySelector('.custom-select-trigger');
    const customOptions = document.querySelectorAll('.custom-option');

    if (customSelect && customSelectTrigger) {
        customSelectTrigger.addEventListener('click', function(e) {
            e.preventDefault(); e.stopPropagation();
            customSelect.classList.toggle('opened');
        });
        document.addEventListener('click', function(e) {
            if (!customSelect.contains(e.target)) {
                customSelect.classList.remove('opened');
            }
        });
        customOptions.forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault(); e.stopPropagation();
                customOptions.forEach(opt => opt.classList.remove('selection'));
                this.classList.add('selection');
                const selectedText = this.querySelector('span').textContent;
                customSelectTrigger.querySelector('span').textContent = selectedText;
                customSelect.classList.remove('opened');

                const blNumber = this.getAttribute('data-value');
                const codeClient = this.getAttribute('data-code-client');
                if (blNumber === '') { resetForm(); } else { loadBlData(blNumber, codeClient); }
            });
        });
    }

    function resetForm() {
        const numBlField = document.getElementById('blencours_numBl');
        const statutField = document.getElementById('blencours_statut');
        const pickingokField = document.getElementById('blencours_Pickingok');
        const pickingnokField = document.getElementById('blencours_Pickingnok');
        if (numBlField) numBlField.value = '';
        if (statutField) statutField.value = 'En attente';
        if (pickingokField) pickingokField.checked = true;
        if (pickingnokField) pickingnokField.checked = false;
        hideClientInfo();
        removeWarnings();
    }

    function loadBlData(blNumber, codeClient) {
        if (!blNumber) return;
        showLoading(true);
        const numBlField = document.getElementById('blencours_numBl');
        if (numBlField) {
            numBlField.value = blNumber;
            numBlField.dispatchEvent(new Event('change'));
        }
        Promise.all([
            fetch(`/blencours/get-bl-data/${encodeURIComponent(blNumber)}`),
            fetch(`/blencours/check-bl-exists/${encodeURIComponent(blNumber)}`)
        ])
        .then(async ([dataResponse, existsResponse]) => {
            const data = await dataResponse.json();
            const existsData = await existsResponse.json();
            if (data.success && data.data.length > 0) {
                const blData = data.data[0];
                fillFormWithBlData(blData);
                displayClientInfo(blData, codeClient);
                if (existsData.exists) { showExistingBlWarning(); } else { removeWarnings(); }
            } else {
                hideClientInfo(); removeWarnings();
            }
            showLoading(false);
        })
        .catch(() => {
            showLoading(false); hideClientInfo(); showError('Erreur lors du chargement des données du BL');
        });
    }

    function fillFormWithBlData(blData) {
        const statutField = document.getElementById('blencours_statut');
        if (statutField) { statutField.value = blData.Statut_Cde || 'En attente'; }
        const pickingokField = document.getElementById('blencours_Pickingok');
        const pickingnokField = document.getElementById('blencours_Pickingnok');
        if (pickingokField && blData.Client) {
            const c = blData.Client.toUpperCase();
            pickingokField.checked = c.includes('OK') || c.includes('VALID') || c.includes('COMPLET');
            pickingokField.dispatchEvent(new Event('change'));
        }
        if (pickingnokField && (blData.Statut_Cde || blData.Transporteur)) {
            const s = (blData.Statut_Cde || '').toUpperCase();
            const t = (blData.Transporteur || '').toUpperCase();
            pickingnokField.checked = s.includes('NOK') || s.includes('ERREUR') || t.includes('ERREUR') || s.includes('ANNULE');
            pickingnokField.dispatchEvent(new Event('change'));
        }
    }

    function displayClientInfo(blData, codeClient) {
        const wrap = document.getElementById('client-info-display');
        if (!wrap) return;
        const isCI9 = codeClient && codeClient.startsWith('CI9');
        const clientClass = isCI9 ? 'client-ci9' : 'client-other';
        const badgeClass = isCI9 ? 'client-badge-ci9' : 'client-badge-other';
        const badgeText  = isCI9 ? 'Client CI9' : 'Client Standard';

        wrap.innerHTML = `
            <div class="client-info-summary ${clientClass}">
                <h5><i class="fas fa-info-circle me-2"></i>Informations du BL ${blData.No_Bl}
                    <span class="client-badge ${badgeClass}">${badgeText}</span>
                </h5>
                <ul>
                    <li><strong>Client :</strong><span>${blData.Client || '--'}</span></li>
                    <li><strong>Code Client :</strong><span>${blData.Code_Client || '--'}</span></li>
                    <li><strong>Transporteur :</strong><span>${blData.Transporteur || '--'}</span></li>
                    <li><strong>Statut commande :</strong><span>${blData.Statut_Cde || '--'}</span></li>
                    <li><strong>Num. commande :</strong><span>${blData.No_Cmd || '--'}</span></li>
                    <li><strong>Date livraison :</strong><span>${blData.Date_liv || '--'}</span></li>
                    <li><strong>Préparateur :</strong><span>${blData.Preparateur || '--'}</span></li>
                </ul>
            </div>
        `;
        wrap.style.display = 'block';
        wrap.style.opacity = '0';
        wrap.style.transform = 'translateY(-20px)';
        setTimeout(() => {
            wrap.style.transition = 'all .3s ease';
            wrap.style.opacity = '1';
            wrap.style.transform = 'translateY(0)';
        }, 50);
    }

    function hideClientInfo() {
        const wrap = document.getElementById('client-info-display');
        if (wrap) { wrap.style.display = 'none'; wrap.innerHTML = ''; }
    }
    function showExistingBlWarning() {
        removeWarnings();
        const numBlField = document.getElementById('blencours_numBl');
        if (!numBlField) return;
        const warn = document.createElement('div');
        warn.className = 'alert alert-warning mt-3 bl-exists-warning';
        warn.innerHTML = `<i class="fas fa-exclamation-triangle me-2"></i>
            <strong>Attention :</strong> Ce numéro de BL existe déjà.`;
        const parent = numBlField.closest('.form-group');
        if (parent) parent.appendChild(warn);
    }
    function removeWarnings() {
        document.querySelectorAll('.alert-warning.bl-exists-warning').forEach(n => n.remove());
    }
    function showLoading(show) {
        if (loadingIndicator) loadingIndicator.style.display = show ? 'flex' : 'none';
    }
    function showError(msg) {
        const div = document.createElement('div');
        div.className = 'alert alert-danger mt-3';
        div.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>${msg}`;
        const container = document.querySelector('.new-bl-container');
        if (container) {
            container.insertBefore(div, container.firstChild);
            setTimeout(() => div.remove(), 5000);
        }
    }

    // ====== Ajout multiple : check/uncheck all ======
    const checkAllBtn = document.getElementById('check-all');
    const uncheckAllBtn = document.getElementById('uncheck-all');
    const checks = document.querySelectorAll('.bl-check');

    if (checkAllBtn) {
        checkAllBtn.addEventListener('click', () => { checks.forEach(c => c.checked = true); });
    }
    if (uncheckAllBtn) {
        uncheckAllBtn.addEventListener('click', () => { checks.forEach(c => c.checked = false); });
    }
});
</script>
{% endblock %}
