{# templates/emplacement/index.html.twig #}

{% extends 'base2.html.twig' %}

{% block title %}Visualisation des emplacements{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        :root {
            --rack-blue: #4472C4;
            --rack-border: #305496;
            --free-space: #ffffff;
            --occupied-space: #92D050;
            --blocked-space: #FF3B30;
            --header-orange: #FFC000;
            --en-sortie: #FF99CC;
            --probleme-color: #8B0000;

            /* Tailles ajustables */
            --cell-width: 100px;
            --cell-height: 60px;
            --sep-width: 12px;          /* ⬅️ épaisseur de la lisse bleue */
            --sep-radius: 3px;
        }

        body { background-color: #f5f7fa; }
        .container-emplacements { margin-top: 20px; overflow-x: auto; padding: 10px; }
        .form-selection { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.08); }
        .cellule-vue { border: 2px solid #000; padding: 16px; margin-bottom: 30px; background-color: #fff; }
        .cellule-header { background-color: #343a40; color: #fff; padding: 12px; font-weight: 600; text-align: center; margin-bottom: 16px; font-size: 1.1rem; letter-spacing: .2px; }
        .allee-content { display: flex; flex-direction: column; gap: 18px; }
        .cote-container { }
        .cote-label { background-color: #E7E6E6; padding: 8px 10px; font-weight: 600; text-align: left; border: 1px solid #000; margin-bottom: 4px; }
        .positions-row { display: flex; flex-direction: row; border-left: 2px solid #000; border-right: 2px solid #000; }

        /* Chaque groupe = 4 positions + 1 fine séparation (sauf le dernier) */
        .position-group { display: flex; flex-direction: row; /* plus de bordure bleue ici */ }
        .position-column { display: flex; flex-direction: column; width: var(--cell-width); }

        .position-header {
            height: 28px;
            display: flex; align-items: center; justify-content: center;
            font-weight: 600;
            background-color: var(--header-orange);
            border: 1px solid #000;
            border-top: 2px solid #000; border-bottom: 1px solid #000;
            font-size: 0.9rem;
            line-height: 1;
        }

        .niveau-cell {
            height: var(--cell-height);
            display: flex; flex-direction: column; align-items: center; justify-content: center;
            border: 1px solid #000;
            font-size: 13px; font-weight: 700;
            position: relative; padding: 3px;
            cursor: pointer;
            transition: transform .15s ease, box-shadow .15s ease;
            background-clip: padding-box;
        }
        .niveau-cell:hover { transform: scale(1.02); box-shadow: 0 0 8px rgba(0,0,0,0.25); z-index: 10; }

        .niveau-info { font-size: 10px; font-weight: 500; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%; text-align: center; }
        .vide { background-color: var(--free-space); }
        .plein { background-color: var(--occupied-space); color: #111; }
        .plein.multiple { background-color: #1B6E1B; color: #fff; }
        .rouge { background-color: var(--blocked-space); color: #fff; }
        .enSortie { background-color: var(--en-sortie); color: #111; }
        .enSortie.multiple { background-color: #CC5283; color: #fff; }
        .probleme { background-color: var(--probleme-color); color: #fff; border: 3px solid #FFD700; }
        .probleme:hover { border-color: #FFA500; }
        .probleme-icon { position: absolute; top: 2px; right: 2px; color: #FFD700; font-size: 14px; }

        /* Ancienne "bleu" = maintenant une fine lisse de séparation */
        .separator-column {
            width: var(--sep-width);
            display: flex; flex-direction: column;
            align-items: stretch; justify-content: stretch;
            padding: 0 2px;  /* un soupçon d’air */
        }
        .separator-cell {
            height: var(--cell-height);
            background-color: var(--rack-blue);
            border-radius: var(--sep-radius);
            /* visuel seulement */
            border: 0;
            pointer-events: none;
            user-select: none;
        }
        .separator-header { height: 28px; } /* espace pour aligner l’entête */

        /* On garde les .info-box dans le DOM mais hors flux (évite le clipping) */
        .niveau-cell .info-box { display: none !important; }

        /* Tooltip global flottant (hors conteneurs à overflow) */
        #hoverTooltip {
            position: fixed; display: none;
            background-color: #343a40; color: #fff;
            border: 1px solid #adb5bd; border-radius: 6px;
            padding: 12px; box-shadow: 0 8px 24px rgba(0,0,0,.2);
            z-index: 5000; max-width: 360px; pointer-events: none;
            font-size: 14px; line-height: 1.35;
        }
        #hoverTooltip strong { color: #ffc107; font-weight: 700; }

        .legende { background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 5px; padding: 15px; margin-top: 20px; }
        .legende-item { display: flex; align-items: center; gap: 12px; margin-bottom: 8px; }
        .legende-couleur { width: 25px; height: 25px; border: 1px solid #adb5bd; border-radius: 3px; }
        .legende-couleur.rack { background-color: var(--rack-blue); }
        .legende-couleur.orange { background-color: var(--header-orange); }
        .legende-couleur.enSortie { background-color: var(--en-sortie); }
        .legende-couleur.probleme { background-color: var(--probleme-color); border: 3px solid #FFD700; }
        .niveau-adresse { font-size: 11px; font-weight: 500; color: #666; position: absolute; bottom: 2px; right: 2px; }

        /* Modal */
        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }
        .modal-content { background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 50%; max-width: 720px; border-radius: 8px; }
        .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }
        .close:hover { color: black; }

        .historique-btn { position: fixed; bottom: 20px; right: 20px; background-color: #007bff; color: white; padding: 10px 20px; border-radius: 5px; text-decoration: none; box-shadow: 0 2px 5px rgba(0,0,0,0.2); z-index: 999; }
        .historique-btn:hover { background-color: #0056b3; color: white; text-decoration: none; }

        /* Un peu plus compact sur petits écrans */
        @media (max-width: 1200px) {
            :root { --cell-width: 88px; --cell-height: 54px; }
            .position-header { font-size: .85rem; height: 26px; }
        }
        @media (max-width: 992px) {
            :root { --cell-width: 80px; --cell-height: 50px; --sep-width: 5px; }
            .cellule-header { font-size: 1rem; }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const celluleSelect = document.getElementById('cellule');
            const alleeSelect = document.getElementById('allee');

            celluleSelect.addEventListener('change', function() {
                document.getElementById('form-selection').submit();
            });
            alleeSelect.addEventListener('change', function() {
                document.getElementById('form-selection').submit();
            });

            // --- Modal signalement ---
            const modal = document.getElementById('problemModal');
            const span = document.getElementsByClassName('close')[0];
            span.onclick = function() { modal.style.display = 'none'; }
            window.onclick = function(event) { if (event.target == modal) modal.style.display = 'none'; }

            document.querySelectorAll('.niveau-cell').forEach(function(cell) {
                cell.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const emplacement = this.dataset.emplacement;
                    if (!emplacement) return; // ignore les séparateurs
                    document.getElementById('problemEmplacement').value = emplacement || '';
                    modal.style.display = 'block';
                });
            });

            document.getElementById('problemForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const emplacement = document.getElementById('problemEmplacement').value;
                const description = document.getElementById('problemDescription').value;

                fetch('{{ path('app_probleme_signaler') }}', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest' },
                    body: JSON.stringify({ emplacement, description })
                })
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        const cell = document.querySelector(`.niveau-cell[data-emplacement="${CSS.escape(emplacement)}"]`);
                        if (cell) {
                            cell.classList.add('probleme');
                            if (!cell.querySelector('.probleme-icon')) {
                                const icon = document.createElement('i');
                                icon.className = 'fas fa-exclamation-triangle probleme-icon';
                                cell.appendChild(icon);
                            }
                        }
                        alert('Problème signalé avec succès');
                        modal.style.display = 'none';
                        document.getElementById('problemDescription').value = '';
                    } else {
                        alert('Erreur lors du signalement');
                    }
                })
                .catch(() => alert('Erreur lors du signalement'));
            });

            // --- Tooltip global hors overflow ---
            const tooltip = document.getElementById('hoverTooltip');

            function positionTooltipRelativeToCell(cell) {
                const rect = cell.getBoundingClientRect();
                tooltip.style.left = '0px';
                tooltip.style.top = '0px';
                tooltip.style.visibility = 'hidden';
                tooltip.style.display = 'block';

                const tRect = tooltip.getBoundingClientRect();
                const vw = window.innerWidth;
                const vh = window.innerHeight;

                let left = rect.right + 12;
                let top = rect.top;

                if (left + tRect.width > vw - 8) left = rect.left - tRect.width - 12;
                if (top + tRect.height > vh - 8) top = Math.max(8, vh - tRect.height - 8);
                if (top < 8) top = 8;

                tooltip.style.left = left + 'px';
                tooltip.style.top = top + 'px';
                tooltip.style.visibility = 'visible';
            }

            function attachTooltip(cell) {
                const innerBox = cell.querySelector('.info-box');
                if (!innerBox) return;
                cell.addEventListener('mouseenter', () => {
                    tooltip.innerHTML = innerBox.innerHTML;
                    positionTooltipRelativeToCell(cell);
                });
                cell.addEventListener('mousemove', () => {
                    if (tooltip.style.display === 'block') positionTooltipRelativeToCell(cell);
                });
                cell.addEventListener('mouseleave', () => {
                    tooltip.style.display = 'none';
                    tooltip.innerHTML = '';
                });
            }

            document.querySelectorAll('.niveau-cell').forEach(attachTooltip);

            window.addEventListener('resize', () => {
                if (tooltip.style.display === 'block') {
                    const hovered = document.querySelector('.niveau-cell:hover');
                    if (hovered) positionTooltipRelativeToCell(hovered);
                }
            });
        });
    </script>
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h1 class="my-4">Visualisation des emplacements</h1>

                <div class="form-selection">
                    <form id="form-selection" method="get">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="cellule">Cellule:</label>
                                    <select id="cellule" name="cellule" class="form-control">
                                        {% for code, data in cellules %}
                                            <option value="{{ code }}" {% if code == celluleSelectionnee %}selected{% endif %}>
                                                Cellule {{ code }}
                                            </option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="allee">Allée:</label>

                                    {% set alleesToShow = cellules[celluleSelectionnee].allees %}
                                    {% if celluleSelectionnee in ['C4','4'] %}
                                        {% set alleesToShow = alleesToShow|merge(['F','G','H']) %}
                                    {% endif %}
                                    {% set _dict = {} %}
                                    {% for a in alleesToShow %}
                                        {% set _dict = _dict|merge({ (a): true }) %}
                                    {% endfor %}
                                    {% set alleesToShow = _dict|keys|sort %}

                                    <select id="allee" name="allee" class="form-control">
                                        {% for alleeCode in alleesToShow %}
                                            <option value="{{ alleeCode }}" {% if alleeCode == alleeSelectionnee %}selected{% endif %}>
                                                Allée {{ alleeCode }}
                                            </option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="cellule-vue">
                    <div class="cellule-header">
                        Cellule: {{ celluleSelectionnee }} - Allée: {{ alleeSelectionnee }}
                    </div>

                    <div class="container-emplacements">
                        <div class="allee-content">
                            <!-- CÔTÉ PAIR (EN HAUT) -->
                            <div class="cote-container">
                                <div class="cote-label">{{ celluleSelectionnee }} - Côté Pair</div>
                                <div class="positions-row">
                                    {% set positionsPair = [] %}
                                    {% for position, niveaux in emplacements.droite %}
                                        {% set positionsPair = positionsPair|merge([position]) %}
                                    {% endfor %}

                                    {% if positionsPair|length > 0 %}
                                        {% set positionsPair = positionsPair|sort %}

                                        {% for chunkStart in range(0, positionsPair|length, 4) %}
                                            <div class="position-group">
                                                {% for i in range(chunkStart, chunkStart + 3) %}
                                                    {% if i < positionsPair|length %}
                                                        {% set position = positionsPair[i] %}
                                                        <div class="position-column">
                                                            {% set paddedPosition = position < 10 ? '0' ~ position : position %}

                                                            {% for niveau in 4..0 %}
                                                                {% if emplacements.droite[position] is defined and emplacements.droite[position][niveau] is defined %}
                                                                    {% set infos = emplacements.droite[position][niveau] %}
                                                                    <div class="niveau-cell {% if infos.probleme %}probleme{% elseif infos.enSortie %}enSortie{% if infos.multiple %} multiple{% endif %}{% elseif infos.rouge %}rouge{% elseif infos.plein %}plein{% if infos.multiple %} multiple{% endif %}{% else %}vide{% endif %}"
                                                                         data-emplacement="{{ infos.code }}">
                                                                        {% if infos.probleme %}
                                                                            <i class="fas fa-exclamation-triangle probleme-icon"></i>
                                                                        {% endif %}
                                                                        {% if infos.plein %}
                                                                            <strong>{{ infos.uvtotal }}</strong>
                                                                            <div class="niveau-info">
                                                                                {{ infos.designation[0]|length > 12 ? infos.designation[0]|slice(0, 12) ~ '...' : infos.designation[0] }}
                                                                            </div>
                                                                            {% if infos.multiple %}
                                                                                <div class="niveau-info">({{ infos.count }} pal.)</div>
                                                                            {% endif %}
                                                                            <div class="info-box">
                                                                                <p><strong>Emplacement:</strong> {{ infos.code }}</p>
                                                                                {% if infos.multiple %}
                                                                                    <p><strong>Nombre de palettes:</strong> {{ infos.count }}</p>
                                                                                    <p><strong>Palettes:</strong></p>
                                                                                    {% for i2 in 0..infos.nopalinfo|length - 1 %}
                                                                                        <div style="margin-left: 10px; border-left: 2px solid #ffc107; padding-left: 10px; margin-bottom: 10px;">
                                                                                            <p>Palette {{ i2 + 1 }}:</p>
                                                                                            <p>- N° Palette: {{ infos.nopalinfo[i2] }}</p>
                                                                                            <p>- Produit: {{ infos.codeprod[i2] }}</p>
                                                                                            <p>- Désignation: {{ infos.designation[i2] }}</p>
                                                                                        </div>
                                                                                    {% endfor %}
                                                                                    <p><strong>UV total cumulé:</strong> {{ infos.uvtotal }}</p>
                                                                                    <p><strong>UC total cumulé:</strong> {{ infos.ucdispo }}</p>
                                                                                    <p><strong>UR total cumulé:</strong> {{ infos.urdispo }}</p>
                                                                                    <p><strong>UV en sortie cumulé:</strong> {{ infos.uvensortie }}</p>
                                                                                {% else %}
                                                                                    <p><strong>Palette:</strong> {{ infos.nopalinfo[0] }}</p>
                                                                                    <p><strong>Produit:</strong> {{ infos.codeprod[0] }}</p>
                                                                                    <p><strong>Désignation:</strong> {{ infos.designation[0] }}</p>
                                                                                    <p><strong>UV total:</strong> {{ infos.uvtotal }}</p>
                                                                                    <p><strong>UC disponible:</strong> {{ infos.ucdispo }}</p>
                                                                                    <p><strong>UR disponible:</strong> {{ infos.urdispo }}</p>
                                                                                    <p><strong>UV en sortie:</strong> {{ infos.uvensortie }}</p>
                                                                                {% endif %}
                                                                                {% if infos.probleme %}
                                                                                    <p><strong class="text-danger">⚠️ Problème signalé</strong></p>
                                                                                {% endif %}
                                                                            </div>
                                                                        {% else %}
                                                                            <span class="niveau-adresse">{{ position }}-{{ niveau }}</span>
                                                                        {% endif %}
                                                                    </div>
                                                                {% else %}
                                                                    <div class="niveau-cell vide" data-emplacement="{{ celluleSelectionnee }}:{{ alleeSelectionnee }}-{{ paddedPosition }}-{{ niveau }}">
                                                                        <span class="niveau-adresse">{{ position }}-{{ niveau }}</span>
                                                                    </div>
                                                                {% endif %}
                                                            {% endfor %}
                                                            <div class="position-header">{{ celluleSelectionnee }}:{{ alleeSelectionnee }}-{{ paddedPosition }}</div>
                                                        </div>
                                                    {% endif %}
                                                {% endfor %}

                                                {# Fine séparation bleue entre blocs de 4 (sauf tout dernier bloc) #}
                                                {% if chunkStart + 4 < positionsPair|length %}
                                                    <div class="separator-column" aria-hidden="true">
                                                        <div class="separator-header"></div>
                                                        {% for _ in 4..0 %}
                                                            <div class="separator-cell"></div>
                                                        {% endfor %}
                                                    </div>
                                                {% endif %}
                                            </div>
                                        {% endfor %}
                                    {% else %}
                                        <div class="text-center py-3">
                                            <em>Aucun emplacement pair disponible</em>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>

                            <!-- CÔTÉ IMPAIR (EN BAS) -->
                            <div class="cote-container">
                                <div class="cote-label">{{ celluleSelectionnee }} - Côté Impair</div>
                                <div class="positions-row">
                                    {% set positionsImpair = [] %}
                                    {% for position, niveaux in emplacements.gauche %}
                                        {% set positionsImpair = positionsImpair|merge([position]) %}
                                    {% endfor %}

                                    {% if positionsImpair|length > 0 %}
                                        {% set positionsImpair = positionsImpair|sort %}

                                        {% for chunkStart in range(0, positionsImpair|length, 4) %}
                                            <div class="position-group">
                                                {% for i in range(chunkStart, chunkStart + 3) %}
                                                    {% if i < positionsImpair|length %}
                                                        {% set position = positionsImpair[i] %}
                                                        <div class="position-column">
                                                            {% set paddedPosition = position < 10 ? '0' ~ position : position %}

                                                            {% for niveau in 4..0 %}
                                                                {% if emplacements.gauche[position] is defined and emplacements.gauche[position][niveau] is defined %}
                                                                    {% set infos = emplacements.gauche[position][niveau] %}
                                                                    <div class="niveau-cell {% if infos.probleme %}probleme{% elseif infos.enSortie %}enSortie{% if infos.multiple %} multiple{% endif %}{% elseif infos.rouge %}rouge{% elseif infos.plein %}plein{% if infos.multiple %} multiple{% endif %}{% else %}vide{% endif %}"
                                                                         data-emplacement="{{ infos.code }}">
                                                                        {% if infos.probleme %}
                                                                            <i class="fas fa-exclamation-triangle probleme-icon"></i>
                                                                        {% endif %}
                                                                        {% if infos.plein %}
                                                                            <strong>{{ infos.uvtotal }}</strong>
                                                                            <div class="niveau-info">
                                                                                {{ infos.designation[0]|length > 12 ? infos.designation[0]|slice(0, 12) ~ '...' : infos.designation[0] }}
                                                                            </div>
                                                                            {% if infos.multiple %}
                                                                                <div class="niveau-info">({{ infos.count }} pal.)</div>
                                                                            {% endif %}
                                                                            <div class="info-box">
                                                                                <p><strong>Emplacement:</strong> {{ infos.code }}</p>
                                                                                {% if infos.multiple %}
                                                                                    <p><strong>Nombre de palettes:</strong> {{ infos.count }}</p>
                                                                                    <p><strong>Palettes:</strong></p>
                                                                                    {% for i2 in 0..infos.nopalinfo|length - 1 %}
                                                                                        <div style="margin-left: 10px; border-left: 2px solid #ffc107; padding-left: 10px; margin-bottom: 10px;">
                                                                                            <p>Palette {{ i2 + 1 }}:</p>
                                                                                            <p>- N° Palette: {{ infos.nopalinfo[i2] }}</p>
                                                                                            <p>- Produit: {{ infos.codeprod[i2] }}</p>
                                                                                            <p>- Désignation: {{ infos.designation[i2] }}</p>
                                                                                        </div>
                                                                                    {% endfor %}
                                                                                    <p><strong>UV total cumulé:</strong> {{ infos.uvtotal }}</p>
                                                                                    <p><strong>UC total cumulé:</strong> {{ infos.ucdispo }}</p>
                                                                                    <p><strong>UR total cumulé:</strong> {{ infos.urdispo }}</p>
                                                                                    <p><strong>UV en sortie cumulé:</strong> {{ infos.uvensortie }}</p>
                                                                                {% else %}
                                                                                    <p><strong>Palette:</strong> {{ infos.nopalinfo[0] }}</p>
                                                                                    <p><strong>Produit:</strong> {{ infos.codeprod[0] }}</p>
                                                                                    <p><strong>Désignation:</strong> {{ infos.designation[0] }}</p>
                                                                                    <p><strong>UV total:</strong> {{ infos.uvtotal }}</p>
                                                                                    <p><strong>UC disponible:</strong> {{ infos.ucdispo }}</p>
                                                                                    <p><strong>UR disponible:</strong> {{ infos.urdispo }}</p>
                                                                                    <p><strong>UV en sortie:</strong> {{ infos.uvensortie }}</p>
                                                                                {% endif %}
                                                                                {% if infos.probleme %}
                                                                                    <p><strong class="text-danger">⚠️ Problème signalé</strong></p>
                                                                                {% endif %}
                                                                            </div>
                                                                        {% else %}
                                                                            <span class="niveau-adresse">{{ position }}-{{ niveau }}</span>
                                                                        {% endif %}
                                                                    </div>
                                                                {% else %}
                                                                    <div class="niveau-cell vide" data-emplacement="{{ celluleSelectionnee }}:{{ alleeSelectionnee }}-{{ paddedPosition }}-{{ niveau }}">
                                                                        <span class="niveau-adresse">{{ position }}-{{ niveau }}</span>
                                                                    </div>
                                                                {% endif %}
                                                            {% endfor %}
                                                            <div class="position-header">{{ celluleSelectionnee }}:{{ alleeSelectionnee }}-{{ paddedPosition }}</div>
                                                        </div>
                                                    {% endif %}
                                                {% endfor %}

                                                {# Fine séparation bleue entre blocs de 4 (sauf tout dernier bloc) #}
                                                {% if chunkStart + 4 < positionsImpair|length %}
                                                    <div class="separator-column" aria-hidden="true">
                                                        <div class="separator-header"></div>
                                                        {% for _ in 4..0 %}
                                                            <div class="separator-cell"></div>
                                                        {% endfor %}
                                                    </div>
                                                {% endif %}
                                            </div>
                                        {% endfor %}
                                    {% else %}
                                        <div class="text-center py-3">
                                            <em>Aucun emplacement impair disponible</em>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="legende">
                    <h5>Légende</h5>
                    <div class="legende-item"><div class="legende-couleur vide" style="background:#fff;"></div><span>Emplacement vide</span></div>
                    <div class="legende-item"><div class="legende-couleur plein" style="background:var(--occupied-space);"></div><span>Emplacement occupé (le chiffre = UV total)</span></div>
                    <div class="legende-item"><div class="legende-couleur plein multiple" style="background:#1B6E1B;"></div><span>Emplacement avec plusieurs palettes</span></div>
                    <div class="legende-item"><div class="legende-couleur rouge" style="background:var(--blocked-space);"></div><span>Palette bloquée</span></div>
                    <div class="legende-item"><div class="legende-couleur enSortie"></div><span>Palette en sortie</span></div>
                    <div class="legende-item"><div class="legende-couleur enSortie multiple" style="background:#CC5283;"></div><span>Plusieurs palettes en sortie</span></div>
                    <div class="legende-item"><div class="legende-couleur probleme" style="background:var(--probleme-color); border:3px solid #FFD700;"></div><span>Problème signalé</span></div>
                    <div class="legende-item"><div class="legende-couleur rack"></div><span>Lisse de séparation (tous les 4 emplacements)</span></div>
                    <div class="legende-item"><div class="legende-couleur orange"></div><span>En-tête position</span></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal pour signaler un problème -->
    <div id="problemModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Signaler un problème</h3>
            <form id="problemForm">
                <div class="form-group">
                    <label for="problemEmplacement">Emplacement :</label>
                    <input type="text" id="problemEmplacement" class="form-control" readonly>
                </div>
                <div class="form-group">
                    <label for="problemDescription">Description du problème :</label>
                    <textarea id="problemDescription" class="form-control" rows="4" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Signaler</button>
            </form>
        </div>
    </div>

    <!-- Tooltip global (hors overflow) -->
    <div id="hoverTooltip" aria-hidden="true"></div>

    <!-- Bouton vers l'historique des problèmes -->
    <a href="{{ path('app_problemes_liste') }}" class="historique-btn">
        <i class="fas fa-history"></i> Historique des problèmes
    </a>
{% endblock %}
